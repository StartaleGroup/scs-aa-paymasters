// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.28;

import {Script, console} from "forge-std/Script.sol";
import "../src/deployer/Deployer.sol";

contract DeploySponsorshipPaymasterCreate3 is Script {
    Deployer deployerInstance;
    address entryPoint;
    mapping(uint256 => uint256) public DEPLOYMENT_CHAIN_GAS_PRICES;

    function setUp() public {
        deployerInstance = Deployer(vm.envAddress("DEPLOYER_CONTRACT_ADDRESS")); // Set Deployer contract
        // EntryPoint v0.7 address
        entryPoint = vm.parseAddress("0x0000000071727De22E5E9d8BAf0edAc6f37da032");
        DEPLOYMENT_CHAIN_GAS_PRICES[1946] = 0.002 gwei;
    }

    function run() public {
        uint256 deployerPrivateKey = vm.envUint("DEPLOYER_CONTRACT_DEPLOYER_PRIVATE_KEY");

        string memory contractName = "SponsorshipPaymaster";
        string memory saltString = "SPONSORSHIP_PAYMASTER_V_0_0_1_SALT_R0gvhZ9"; // placeholder under audit is final, then get it from env
        // for above address would be 0x00000864bbb7b8f0d42d41026f2d1c774cecb6dd

        bytes memory deployedBytecode =
            hex"60a06040523461012857612c65803803809161001a82610140565b60a03960e08160a001911261012857610031610189565b61003b60c061019f565b60e051926001600160401b038411610128578060bf850112156101285760a0840151906001600160401b03821161012c578160051b94604051926100826020880185610166565b835260c060208401968201019182116101285760c001945b8186106101105750506100c793506100b361010061019f565b6101205191610140519361016051956101b3565b6040516127df908161048682396080518181816107c3015281816108970152818161097d01528181610a3001528181610b5a0152818161115f01528181611bc6015261225c0152f35b6020809161011d8861019f565b81520195019461009a565b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b60a0601f91909101601f19168101906001600160401b0382119082101761012c57604052565b601f909101601f19168101906001600160401b0382119082101761012c57604052565b60a051906001600160a01b038216820361012857565b51906001600160a01b038216820361012857565b6101c6916001600160a01b031690610306565b805180156102cf575f5b818110610227575050509161021b61022092610216856101f48861022599986103d5565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600255565b600555565b600655565b565b61025061024461023783866102de565b516001600160a01b031690565b6001600160a01b031690565b156102c05761026b61026561023783866102de565b3b151590565b6102b157806102ab61029e610285610237600195886102de565b6001600160a01b03165f90815260208190526040902090565b805460ff19166001179055565b016101d0565b6319e573cb60e11b5f5260045ffd5b63c943590960e01b5f5260045ffd5b63b5fa16ed60e01b5f5260045ffd5b80518210156102f25760209160051b010190565b634e487b7160e01b5f52603260045260245ffd5b8060601b156103c8576001600160a01b0316638b78c6d8198190555f7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a36040516301ffc9a760e01b815263122a0e9b60e31b60048201526020816024816001600160a01b0386165afa80156103bd57610389915f9161038e575b50610439565b608052565b6103b0915060203d6020116103b6575b6103a88183610166565b810190610421565b5f610383565b503d61039e565b6040513d5f823e3d90fd5b637448fbae5f526004601cfd5b6001600160a01b0381166103f257633fd0943d60e11b5f5260045ffd5b3b1561040757631f47525f60e21b5f5260045ffd5b620249f01061041257565b63313db2a560e11b5f5260045ffd5b90816020910312610128575180151581036101285790565b1561044057565b60405162461bcd60e51b815260206004820152601e60248201527f49456e747279506f696e7420696e74657266616365206d69736d6174636800006044820152606490fdfe60806040526004361015610011575f80fd5b5f5f3560e01c80630396cb6014611b6b5780630e316ab714611abd5780631b9a91a4146119ac578063205c28781461194b57806325692962146118e25780633499117e146118a657806341b3d1851461186a57806344004cc11461171057806352b7512c1461162d57806354d1f13d146115c9578063715018a61461152a578063736c0d5b14610fcf57806373acf542146114bc5780637c627b21146112f15780637deb9260146110365780637df73e2714610fcf5780638c661b5d14610f5b5780638da5cb5b14610eea5780638fcc9cfb14610e7757806394d4ad6014610d595780639d31b69d1461020f578063a42dce8014610c3c578063aa67c91914610a90578063ab94cad714610a54578063b0d691fe146109e5578063bb9fe6bf1461092e578063c23a5cea1461083f578063c399ec881461074b578063c415b95c146106f9578063d0e30db0146106a7578063d2c13da514610666578063da95ebf7146104c0578063def04257146103ec578063eb12d61e1461033b578063f04e283e146102cf578063f2fde38b14610272578063f8b2cb4f1461020f5763fee81cf4146101bc575f80fd5b3461020c5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020c576101f3611c50565b9063389a75e1600c5252602080600c2054604051908152f35b80fd5b503461020c5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020c57604060209173ffffffffffffffffffffffffffffffffffffffff610261611c50565b168152600383522054604051908152f35b5060207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020c576102a5611c50565b6102ad61219a565b8060601b156102c2576102bf90612728565b80f35b637448fbae82526004601cfd5b5060207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020c57610302611c50565b61030a61219a565b63389a75e1600c528082526020600c208054421161032e5790826102bf9255612728565b636f5e881883526004601cfd5b5060207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020c577f47d1c22a25bb3a5d4e481b9b1e6944c2eade3181a0a20b495ed61d35b5323f24602073ffffffffffffffffffffffffffffffffffffffff6103a6611c50565b6103ae61219a565b168084528382526040842060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00825416179055604051908152a180f35b503461020c5760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020c5760043567ffffffffffffffff81116104bc576101207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc82360301126104bc57610463611c73565b6044359065ffffffffffff821682036104b8576064359265ffffffffffff841684036104b4576084359463ffffffff8616860361020c5760206104ac8787878787600401612084565b604051908152f35b8480fd5b8380fd5b5080fd5b503461020c5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020c576104f8611c50565b73ffffffffffffffffffffffffffffffffffffffff16602435811561063e578015610616573383526003602052806040842054106105d65760405161053c81611cc4565b81815260026020820184815260408301904282523387526004602052604087209351845573ffffffffffffffffffffffffffffffffffffffff600185019151167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055519101556040519081527f04c56a409d50971e45c5a2d96e5d557d2b0f1d66d40f14b141e4c958b0f39b3260203392a380f35b82606491338252600360205260408220547f5c54305e00000000000000000000000000000000000000000000000000000000835233600452602452604452fd5b6004837f73a6840a000000000000000000000000000000000000000000000000000000008152fd5b6004837f84c21026000000000000000000000000000000000000000000000000000000008152fd5b503461020c5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020c5761069e61219a565b60043560055580f35b50807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020c57807f302076c90000000000000000000000000000000000000000000000000000000060049252fd5b503461020c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020c57602073ffffffffffffffffffffffffffffffffffffffff60015416604051908152f35b503461020c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020c576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260208160248173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa9081156108345782916107fe575b602082604051908152f35b90506020813d60201161082c575b8161081960209383611d0d565b810103126104bc5760209150515f6107f3565b3d915061080c565b6040513d84823e3d90fd5b503461020c5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020c5780610878611c50565b61088061219a565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690813b1561092a5773ffffffffffffffffffffffffffffffffffffffff602484928360405195869485937fc23a5cea0000000000000000000000000000000000000000000000000000000085521660048401525af18015610834576109195750f35b8161092391611d0d565b61020c5780f35b5050fd5b503461020c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020c5761096561219a565b8073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016803b156109e2578180916004604051809481937fbb9fe6bf0000000000000000000000000000000000000000000000000000000083525af18015610834576109195750f35b50fd5b503461020c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020c57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b503461020c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020c576020600654604051908152f35b5060207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020c57610ac3611c50565b610acb6121d1565b3415610bff5773ffffffffffffffffffffffffffffffffffffffff16808252600360205260408220541580610c31575b610bff57808252600360205260408220610b16348254611d88565b90557fa2a2db73af12c9f5bef6303364d44e78f97e992c353cd8659f3474c471427e9b6020604051348152a28073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016803b156109e25781602491604051928380927fb760faf900000000000000000000000000000000000000000000000000000000825230600483015234905af1801561083457610bea575b507f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f005d80f35b81610bf491611d0d565b61020c57805f610bc4565b6044826002547f82222d6700000000000000000000000000000000000000000000000000000000825234600452602452fd5b506002543410610afb565b5060207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020c5773ffffffffffffffffffffffffffffffffffffffff610c84611c50565b610c8c61219a565b168015610cfb5773ffffffffffffffffffffffffffffffffffffffff600154827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617600155167f649c5e3d0ed183894196148e193af316452b0037e77d2ff0fef23b7dc722bed08380a380f35b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f496e76616c696420666565436f6c6c6563746f722061646472657373000000006044820152fd5b503461020c5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020c5760043567ffffffffffffffff81116104bc57610da9903690600401611c96565b610db291611ede565b9597949386946040949294519973ffffffffffffffffffffffffffffffffffffffff8b9a168a5265ffffffffffff1660208a015265ffffffffffff16604089015263ffffffff1660608801526fffffffffffffffffffffffffffffffff1660808701526fffffffffffffffffffffffffffffffff1660a086015260c0850160e090528160e08601526101008501378183016101000152601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168101036101000190f35b503461020c5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020c57600435610eb261219a565b7fcacd94bd1e7bb1185c816a740d9439bc8eff8159f6f4ffad8d306b5aca2ebd9260406002548151908152836020820152a160025580f35b503461020c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020c5760207fffffffffffffffffffffffffffffffffffffffffffffffffffffffff748739275473ffffffffffffffffffffffffffffffffffffffff60405191168152f35b503461020c5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020c57608073ffffffffffffffffffffffffffffffffffffffff610fb2610fad611c50565b611dcf565b929391604051941515855260208501521660408301526060820152f35b503461020c5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020c5760ff604060209273ffffffffffffffffffffffffffffffffffffffff611023611c50565b1681528084522054166040519015158152f35b503461020c5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020c5773ffffffffffffffffffffffffffffffffffffffff611083611c50565b61108b6121d1565b1680825260046020526040822090604051916110a683611cc4565b80548352600273ffffffffffffffffffffffffffffffffffffffff600183015416916020850192835201546040840190808252156112c557516005546110eb91611d88565b8042106112955750818452600360205260408420548351818111156112905750805b8085521561126857835161112091611dc2565b8285526003602052604085205581845260046020528360026040822082815582600182015501558373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8351168551823b156104b857604484928360405195869485937f205c2878000000000000000000000000000000000000000000000000000000008552600485015260248401525af1801561083457611253575b5050602073ffffffffffffffffffffffffffffffffffffffff7f121eb3d5e027dba2c931e672efb7d244364546af71aef554f4c26e802c143c9b9251169351604051908152a3807f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f005d80f35b8161125d91611d0d565b6104b857835f6111e7565b6004857f73a6840a000000000000000000000000000000000000000000000000000000008152fd5b61110d565b84604491847f3f6aef51000000000000000000000000000000000000000000000000000000008352600452602452fd5b602485847f6dbc82f9000000000000000000000000000000000000000000000000000000008252600452fd5b503461020c5760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020c5760043560038110156104bc576024359067ffffffffffffffff82116114b8576113506060923690600401611c96565b9080939161135c612245565b810103126114b85781359173ffffffffffffffffffffffffffffffffffffffff83168093036104b857602081013563ffffffff81168091036104b4577fb51885f42df18ff2d99621fa3752090f501b08a1b746ad11ecc8fa00e068b1db926040606093013585620f42406113e96113e26113da606435600654611ecb565b604435611d88565b9586611ecb565b046113f48582611dc2565b9273ffffffffffffffffffffffffffffffffffffffff600154168a52600360205260408a20611424858254611d88565b90558181111561148f5761145b7f3367befd2b2f39615cd79917c2153263c4af1d3945ec003e5d5bfc13a8d8583392602092611dc2565b838b526003825260408b20611471828254611d88565b9055604051908152a25b60405192835260208301526040820152a280f35b9061149a9250611dc2565b86885260036020526114b160408920918254611dc2565b905561147b565b8280fd5b5060207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020c576004356114f261219a565b620249f081116115025760065580f35b6004827f627b654a000000000000000000000000000000000000000000000000000000008152fd5b50807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020c5761155c61219a565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffff74873927547f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3807fffffffffffffffffffffffffffffffffffffffffffffffffffffffff748739275580f35b50807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020c5763389a75e1600c52338152806020600c2055337ffa7b8eab7da67f412cc9575ed43464468f9bfbae89d1675917346ca6d8fe3c928280a280f35b503461020c5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020c5760043567ffffffffffffffff81116104bc576101207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc82360301126104bc5760207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f6116df6060946116cf612245565b60443590602435906004016122e2565b6040949194519687956040875280519384918260408a0152018888015e868387010152602085015201168101030190f35b503461020c5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020c5760043573ffffffffffffffffffffffffffffffffffffffff81168091036104bc57611769611c73565b6044359161177561219a565b61177d6121d1565b73ffffffffffffffffffffffffffffffffffffffff821691821561184257601452826034526fa9059cbb00000000000000000000000084526020846044601082855af18060018651141615611824575b50836034526040519283527fedf7bea45e16025d7f82902171a24376f5f3a2c06d9d8c2be4d41bbc7292f74a60203394a4807f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f005d80f35b3d823b15171015611835575f6117cd565b6390b8ec1884526004601cfd5b6004857f84c21026000000000000000000000000000000000000000000000000000000008152fd5b503461020c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020c576020600254604051908152f35b503461020c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020c576020600554604051908152f35b50807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020c5763389a75e1600c523381526202a30042016020600c2055337fdbf36a107da19e49527a7176a1babf963b4b0ff8cde35ee35d6cd8f1f9ac7e1d8280a280f35b503461020c5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020c57600490611986611c50565b507fad42eb99000000000000000000000000000000000000000000000000000000008152fd5b5060407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020c576119df611c50565b73ffffffffffffffffffffffffffffffffffffffff60243591611a0061219a565b611a086121d1565b16908280808084865af13d15611ab8573d611a2281611d4e565b90611a306040519283611d0d565b81528460203d92013e5b15611a905760207f8455ae6be5d92f1df1c3c1484388e247a36c7e60d72055ae216dbc258f257d4b91604051908152a2807f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f005d80f35b6004837f27fcd9d1000000000000000000000000000000000000000000000000000000008152fd5b611a3a565b5060207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020c577f3525e22824a8a7df2c9a6029941c824cf95b6447f1e13d5128fd3826d35afe8b602073ffffffffffffffffffffffffffffffffffffffff611b28611c50565b611b3061219a565b16808452838252604084207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008154169055604051908152a180f35b5060207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112611c4c5760043563ffffffff8116809103611c4c57611baf61219a565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690813b15611c4c575f906024604051809481937f0396cb60000000000000000000000000000000000000000000000000000000008352600483015234905af18015611c4157611c33575080f35b611c3f91505f90611d0d565b005b6040513d5f823e3d90fd5b5f80fd5b6004359073ffffffffffffffffffffffffffffffffffffffff82168203611c4c57565b6024359073ffffffffffffffffffffffffffffffffffffffff82168203611c4c57565b9181601f84011215611c4c5782359167ffffffffffffffff8311611c4c5760208381860195010111611c4c57565b6060810190811067ffffffffffffffff821117611ce057604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117611ce057604052565b67ffffffffffffffff8111611ce057601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b91908201809211611d9557565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b91908203918211611d9557565b73ffffffffffffffffffffffffffffffffffffffff165f52600460205260405f206040805192611dfe84611cc4565b825493848152600273ffffffffffffffffffffffffffffffffffffffff60018601541694856020840152015492839101528115155f14611e4057600193929190565b5f93508392508291508190565b90939293848311611c4c578411611c4c578101920390565b919091357fffffffffffff000000000000000000000000000000000000000000000000000081169260068110611e99575050565b7fffffffffffff0000000000000000000000000000000000000000000000000000929350829060060360031b1b161690565b81810292918115918404141715611d9557565b60489291808411611c4c57603482013560601c93604e8111611c4c5781604e11611c4c5780611f1391840190604e0390611e65565b60d01c92611f2e611f286054604e8587611e4d565b90611e65565b60d01c92611f40605860548584611e4d565b90357fffffffff0000000000000000000000000000000000000000000000000000000081169160048110611fc8575b505060e01c9280602411611c4c57601482013560801c9260348210611c4c57602483013560801c9260588310611c4c57605801917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa80190565b7fffffffff000000000000000000000000000000000000000000000000000000009250829060040360031b1b16165f80611f6f565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe181360301821215611c4c570180359067ffffffffffffffff8211611c4c57602001918136038313611c4c57565b92919261205a82611d4e565b916120686040519384611d0d565b829481845281830111611c4c578281602093845f960137010152565b9290939161209f6120986040860186611ffd565b369161204e565b60208151910120946120b76120986060870187611ffd565b60208151910120946120cc60e0820182611ffd565b603411611c4c57604051966020880198833573ffffffffffffffffffffffffffffffffffffffff168a52602084013560408a015260608901526080880152608082013560a08801526014013560c087015260a081013560e087015260c00135610100860152466101208601523061014086015273ffffffffffffffffffffffffffffffffffffffff1661016085015265ffffffffffff1661018084015265ffffffffffff166101a083015263ffffffff166101c08201526101c081526121946101e082611d0d565b51902090565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff748739275433036121c457565b6382b429005f526004601cfd5b7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f005c61221d5760017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f005d565b7f3ee5aeb5000000000000000000000000000000000000000000000000000000005f5260045ffd5b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016330361228457565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f43616c6c6572206973206e6f7420456e747279506f696e7400000000000000006044820152fd5b90929160e0820160606122fe6122f88386611ffd565b90611ede565b6040919496959d9798935080925014158061271d575b6126f55761236e73ffffffffffffffffffffffffffffffffffffffff9361233f878f888f8d90612084565b6020527b19457468657265756d205369676e6564204d6573736167653a0a33325f52603c60042092369161204e565b915f926040519260208201918051806040146126b7576041146126815750505050505b165f525f60205260ff60405f2054161598895f1461263c5760ff79ffffffffffff00000000000000000000000000000000000000007fffffffffffff00000000000000000000000000000000000000000000000000006001935b60d01b169360a01b1691161717976126215763ffffffff1692621e848084118015612615575b6125ed5761241f9086611ffd565b603411611c4c5760246fffffffffffffffffffffffffffffffff91013560801c166fffffffffffffffffffffffffffffffff608087013516016fffffffffffffffffffffffffffffffff8111611d95576fffffffffffffffffffffffffffffffff600a911602936fffffffffffffffffffffffffffffffff8516948503611d95576124e7846124e2620f4240936124dc60646124d26fffffffffffffffffffffffffffffffff60c08e013516809c611ecb565b0499600654611ecb565b90611d88565b611ecb565b049373ffffffffffffffffffffffffffffffffffffffff6125088287611d88565b931692835f52600360205260405f2054106125a2576125279085611d88565b825f52600360205261253e60405f20918254611dc2565b905573ffffffffffffffffffffffffffffffffffffffff604051953516907f94139248bcc22ab7c689ff34422119f69e04a937052f28621797cb5f69c45af75f80a36020840152604083015260608201526060815261259e608082611d0d565b9190565b846125bb8492835f52600360205260405f205492611d88565b917f5c54305e000000000000000000000000000000000000000000000000000000005f5260045260245260445260645ffd5b7f280b6fdc000000000000000000000000000000000000000000000000000000005f5260045ffd5b50620f42408410612411565b505050505050604051612635602082611d0d565b5f81529190565b60ff79ffffffffffff00000000000000000000000000000000000000007fffffffffffff00000000000000000000000000000000000000000000000000005f936123eb565b808401515f1a60205260400151835292935090915b5f52516040526020604060805f60015afa505f81523d185190604052612391565b507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff91929394955060400151601b8160ff1c01602052168352612696565b7ff95eeeac000000000000000000000000000000000000000000000000000000005f5260045ffd5b506041811415612314565b73ffffffffffffffffffffffffffffffffffffffff16807fffffffffffffffffffffffffffffffffffffffffffffffffffffffff74873927547f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a37fffffffffffffffffffffffffffffffffffffffffffffffffffffffff748739275556fea2646970667358221220025c7a4ee0a953d5309491458befaa4b874ad593f84f85af78e68f19e8e5797164736f6c634300081c0033";

        // Load environment variables
        // uint256 salt = vm.envUint("SALT");
        address owner = vm.envAddress("OWNER");
        address feeCollector = vm.envAddress("FEE_COLLECTOR");
        uint256 minDeposit = vm.envUint("MIN_DEPOSIT");
        uint256 withdrawalDelay = vm.envUint("WITHDRAWAL_DELAY");
        uint256 unaccountedGas = vm.envUint("UNACCOUNTED_GAS");

        // Parse signers from comma-separated string
        string[] memory signers = vm.envString("SIGNERS", ",");
        address[] memory signersAddr = new address[](signers.length);
        for (uint256 i = 0; i < signers.length; i++) {
            signersAddr[i] = vm.parseAddress(signers[i]);
        }

        bytes memory constructorArgs =
            abi.encode(owner, entryPoint, signersAddr, feeCollector, minDeposit, withdrawalDelay, unaccountedGas);

        // Concatenate bytecode + constructor arguments
        bytes memory finalBytecode = abi.encodePacked(deployedBytecode, constructorArgs);

        // Deploy contract if needed
        deployGeneric(deployerPrivateKey, saltString, finalBytecode, contractName);
    }

    function deployGeneric(
        uint256 deployerPrivateKey,
        string memory saltString,
        bytes memory finalBytecode,
        string memory contractName
    ) public {
        // Compute derived salt
        bytes32 derivedSalt = keccak256(abi.encodePacked(saltString));

        // Compute contract address before deployment
        address computedAddress = deployerInstance.addressOf(derivedSalt);

        console.log(string(abi.encodePacked(contractName, " Computed Address:")), computedAddress);

        // Check if contract is already deployed
        uint256 codeSize;
        assembly {
            codeSize := extcodesize(computedAddress)
        }

        if (codeSize == 0) {
            console.log(string(abi.encodePacked(contractName, " not deployed, deploying now...")));
            deployContract(deployerPrivateKey, derivedSalt, finalBytecode, contractName, computedAddress);
        } else {
            console.log(string(abi.encodePacked(contractName, " already deployed at:")), computedAddress);
        }
    }

    function deployContract(
        uint256 deployerPrivateKey,
        bytes32 derivedSalt,
        bytes memory finalBytecode,
        string memory contractName,
        address computedAddress
    ) internal {
        uint256 chainId = block.chainid;

        uint256 gasPrice = DEPLOYMENT_CHAIN_GAS_PRICES[chainId];
        require(gasPrice > 0, "No deployment gas price set for this chain");

        console.log("Using gas price:", gasPrice);

        // Deploy contract using deployer's private key
        vm.startBroadcast(deployerPrivateKey);
        (bool success, bytes memory result) = address(deployerInstance).call{gas: 5_000_000}(
            abi.encodeWithSignature("deploy(bytes32,bytes)", derivedSalt, finalBytecode)
        );
        vm.stopBroadcast();

        require(success, "Contract deployment failed");

        console.log(string(abi.encodePacked("Transaction success: ", contractName)));

        // Verify deployment by checking contract existence
        uint256 codeSize;
        assembly {
            codeSize := extcodesize(computedAddress)
        }

        if (codeSize == 0) {
            console.log(string(abi.encodePacked("Invalid deployment of ", contractName)));
        } else {
            console.log(string(abi.encodePacked(contractName, " Deployed Successfully at:")), computedAddress);
        }
    }
}
